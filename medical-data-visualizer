# medical_data_visualizer.py

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

# -------------------------
# 1. Import Data
# -------------------------
df = pd.read_csv('medical_examination.csv')

# -------------------------
# 2. Add overweight column
# -------------------------
# BMI = weight(kg) / height(m)^2
df['overweight'] = ((df['weight'] / ((df['height']/100) ** 2)) > 25).astype(int)

# -------------------------
# 3. Normalize data
# -------------------------
df['cholesterol'] = (df['cholesterol'] > 1).astype(int)
df['gluc'] = (df['gluc'] > 1).astype(int)

# -------------------------
# 4. Draw Categorical Plot
# -------------------------
def draw_cat_plot():
    # Create DataFrame for cat plot using pd.melt
    df_cat = pd.melt(df, id_vars=['cardio'], 
                     value_vars=['cholesterol', 'gluc', 'smoke', 'alco', 'active', 'overweight'])
    
    # Group and reformat the data to show counts
    df_cat = df_cat.value_counts(subset=['cardio','variable','value']).reset_index(name='total')
    
    # Draw the categorical plot using seaborn
    fig = sns.catplot(
        data=df_cat,
        x='variable',
        y='total',
        hue='value',
        col='cardio',
        kind='bar'
    ).fig

    return fig

# -------------------------
# 5. Draw Heat Map
# -------------------------
def draw_heat_map():
    # Clean the data
    df_heat = df[
        (df['ap_lo'] <= df['ap_hi']) &
        (df['height'] >= df['height'].quantile(0.025)) &
        (df['height'] <= df['height'].quantile(0.975)) &
        (df['weight'] >= df['weight'].quantile(0.025)) &
        (df['weight'] <= df['weight'].quantile(0.975))
    ]

    # Calculate correlation matrix
    corr = df_heat.corr()

    # Generate a mask for the upper triangle
    mask = np.triu(np.ones_like(corr, dtype=bool))

    # Set up the matplotlib figure
    fig, ax = plt.subplots(figsize=(12, 10))

    # Draw the heatmap
    sns.heatmap(
        corr, 
        mask=mask,
        annot=True, 
        fmt=".1f",
        cmap='coolwarm',
        center=0,
        square=True,
        linewidths=0.5
    )

    return fig

# -------------------------
# For testing independently
# -------------------------
if __name__ == "__main__":
    cat_fig = draw_cat_plot()
    cat_fig.savefig("catplot.png")

    heat_fig = draw_heat_map()
    heat_fig.savefig("heatmap.png")
