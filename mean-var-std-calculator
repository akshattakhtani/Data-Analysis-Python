# mean_var_std_full.py
import numpy as np

def calculate(numbers):
    """
    Calculate mean, variance, standard deviation, max, min, and sum
    for a 3x3 matrix created from a list of 9 numbers.

    Parameters:
        numbers (list): List of 9 numeric values.

    Returns:
        dict: Dictionary with statistics for rows, columns, and flattened matrix.
    
    Raises:
        ValueError: If the input list does not contain exactly 9 numbers.
    """
    if len(numbers) != 9:
        raise ValueError("List must contain nine numbers.")
    
    arr = np.array(numbers).reshape(3, 3)
    stats = {}
    for func_name, func in [('mean', np.mean), 
                            ('variance', np.var), 
                            ('standard deviation', np.std), 
                            ('max', np.max), 
                            ('min', np.min), 
                            ('sum', np.sum)]:
        stats[func_name] = [
            func(arr, axis=1).tolist(),  # row-wise
            func(arr, axis=0).tolist(),  # column-wise
            func(arr).item()             # flattened
        ]
    return stats

# -------------------------
# Main Program
# -------------------------
if __name__ == "__main__":
    try:
        # Ask user to input 9 numbers separated by spaces
        user_input = input("Enter 9 numbers separated by spaces: ")
        
        # Convert input string to list of floats
        numbers = [float(x) for x in user_input.strip().split()]
        
        # Calculate statistics
        result = calculate(numbers)
        
        # Print results nicely
        for key, value in result.items():
            print(f"\n{key.capitalize()}:")
            print(f"  Row-wise:    {value[0]}")
            print(f"  Column-wise: {value[1]}")
            print(f"  Flattened:   {value[2]}")
    
    except ValueError as e:
        print("Error:", e)
